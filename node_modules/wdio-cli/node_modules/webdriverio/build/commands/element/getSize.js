"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getElementSize;

require("source-map-support/register");

/**
 *
 * Get the width and height for an DOM-element.
 *
 * <example>
    :getElementSize.js
    it('should demonstrate the getElementSize command', () => {
        browser.url('http://github.com')
        const logo = $('.octicon-mark-github')

        const size = logo.getElementSize()
        console.log(size) // outputs: { width: 32, height: 32 }

        const width = logo.getElementSize('width')
        console.log(width) // outputs: 32

        const height = logo.getElementSize('height')
        console.log(height) // outputs: 32
    })
 * </example>
 *
 * @alias element.getElementSize
 * @param {String} prop     size to receive [optional] ("width" or "height")
 * @return {Object|Number}    requested element size (`{ width: <Number>, height: <Number> }`) or actual width/height as number if prop param is given
 * @uses protocol/elements, protocol/getElementRect
 * @type property
 *
 */
async function getElementSize(prop = null) {
  let rect = {};

  if (this.isW3C) {
    rect = await this.getElementRect(this.elementId);
  } else {
    rect = await this.getElementSize(this.elementId);
  }

  if (rect[prop]) {
    return rect[prop];
  }

  return {
    width: rect.width,
    height: rect.height
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9lbGVtZW50L2dldFNpemUuanMiXSwibmFtZXMiOlsiZ2V0RWxlbWVudFNpemUiLCJwcm9wIiwicmVjdCIsImlzVzNDIiwiZ2V0RWxlbWVudFJlY3QiLCJlbGVtZW50SWQiLCJ3aWR0aCIsImhlaWdodCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QmUsZUFBZUEsY0FBZixDQUE4QkMsSUFBSSxHQUFHLElBQXJDLEVBQTJDO0FBQ3RELE1BQUlDLElBQUksR0FBRyxFQUFYOztBQUVBLE1BQUksS0FBS0MsS0FBVCxFQUFnQjtBQUNaRCxJQUFBQSxJQUFJLEdBQUcsTUFBTSxLQUFLRSxjQUFMLENBQW9CLEtBQUtDLFNBQXpCLENBQWI7QUFDSCxHQUZELE1BRU87QUFDSEgsSUFBQUEsSUFBSSxHQUFHLE1BQU0sS0FBS0YsY0FBTCxDQUFvQixLQUFLSyxTQUF6QixDQUFiO0FBQ0g7O0FBRUQsTUFBR0gsSUFBSSxDQUFDRCxJQUFELENBQVAsRUFBZTtBQUNYLFdBQU9DLElBQUksQ0FBQ0QsSUFBRCxDQUFYO0FBQ0g7O0FBRUQsU0FBTztBQUNISyxJQUFBQSxLQUFLLEVBQUVKLElBQUksQ0FBQ0ksS0FEVDtBQUVIQyxJQUFBQSxNQUFNLEVBQUVMLElBQUksQ0FBQ0s7QUFGVixHQUFQO0FBSUgiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBHZXQgdGhlIHdpZHRoIGFuZCBoZWlnaHQgZm9yIGFuIERPTS1lbGVtZW50LlxuICpcbiAqIDxleGFtcGxlPlxuICAgIDpnZXRFbGVtZW50U2l6ZS5qc1xuICAgIGl0KCdzaG91bGQgZGVtb25zdHJhdGUgdGhlIGdldEVsZW1lbnRTaXplIGNvbW1hbmQnLCAoKSA9PiB7XG4gICAgICAgIGJyb3dzZXIudXJsKCdodHRwOi8vZ2l0aHViLmNvbScpXG4gICAgICAgIGNvbnN0IGxvZ28gPSAkKCcub2N0aWNvbi1tYXJrLWdpdGh1YicpXG5cbiAgICAgICAgY29uc3Qgc2l6ZSA9IGxvZ28uZ2V0RWxlbWVudFNpemUoKVxuICAgICAgICBjb25zb2xlLmxvZyhzaXplKSAvLyBvdXRwdXRzOiB7IHdpZHRoOiAzMiwgaGVpZ2h0OiAzMiB9XG5cbiAgICAgICAgY29uc3Qgd2lkdGggPSBsb2dvLmdldEVsZW1lbnRTaXplKCd3aWR0aCcpXG4gICAgICAgIGNvbnNvbGUubG9nKHdpZHRoKSAvLyBvdXRwdXRzOiAzMlxuXG4gICAgICAgIGNvbnN0IGhlaWdodCA9IGxvZ28uZ2V0RWxlbWVudFNpemUoJ2hlaWdodCcpXG4gICAgICAgIGNvbnNvbGUubG9nKGhlaWdodCkgLy8gb3V0cHV0czogMzJcbiAgICB9KVxuICogPC9leGFtcGxlPlxuICpcbiAqIEBhbGlhcyBlbGVtZW50LmdldEVsZW1lbnRTaXplXG4gKiBAcGFyYW0ge1N0cmluZ30gcHJvcCAgICAgc2l6ZSB0byByZWNlaXZlIFtvcHRpb25hbF0gKFwid2lkdGhcIiBvciBcImhlaWdodFwiKVxuICogQHJldHVybiB7T2JqZWN0fE51bWJlcn0gICAgcmVxdWVzdGVkIGVsZW1lbnQgc2l6ZSAoYHsgd2lkdGg6IDxOdW1iZXI+LCBoZWlnaHQ6IDxOdW1iZXI+IH1gKSBvciBhY3R1YWwgd2lkdGgvaGVpZ2h0IGFzIG51bWJlciBpZiBwcm9wIHBhcmFtIGlzIGdpdmVuXG4gKiBAdXNlcyBwcm90b2NvbC9lbGVtZW50cywgcHJvdG9jb2wvZ2V0RWxlbWVudFJlY3RcbiAqIEB0eXBlIHByb3BlcnR5XG4gKlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGdldEVsZW1lbnRTaXplKHByb3AgPSBudWxsKSB7XG4gICAgbGV0IHJlY3QgPSB7fVxuXG4gICAgaWYgKHRoaXMuaXNXM0MpIHtcbiAgICAgICAgcmVjdCA9IGF3YWl0IHRoaXMuZ2V0RWxlbWVudFJlY3QodGhpcy5lbGVtZW50SWQpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmVjdCA9IGF3YWl0IHRoaXMuZ2V0RWxlbWVudFNpemUodGhpcy5lbGVtZW50SWQpXG4gICAgfVxuXG4gICAgaWYocmVjdFtwcm9wXSkge1xuICAgICAgICByZXR1cm4gcmVjdFtwcm9wXVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiByZWN0LndpZHRoLFxuICAgICAgICBoZWlnaHQ6IHJlY3QuaGVpZ2h0XG4gICAgfVxufVxuIl19