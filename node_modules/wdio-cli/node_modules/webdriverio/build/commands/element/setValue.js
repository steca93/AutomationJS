"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = setValue;

require("source-map-support/register");

/**
 *
 * Send a sequence of key strokes to an element (clears value before). If the element
 * doesn't need to be cleared first then use addValue. You can also use
 * unicode characters like Left arrow or Back space. WebdriverIO will take care of
 * translating them into unicode characters. Youâ€™ll find all supported characters
 * [here](https://w3c.github.io/webdriver/webdriver-spec.html#keyboard-actions).
 * To do that, the value has to correspond to a key from the table.
 *
 * <example>
    :setValue.js
    it('should set value for a certain element', () => {
        const input = $('.input');
        input.setValue('test123');

        console.log(input.getValue()); // outputs: 'test123'
    });
 * </example>
 *
 * @alias element.setValue
 * @param {String} selector   Input element
 * @param {*}      values    Value to be added
 * @uses protocol/elements, protocol/elementIdClear, protocol/elementIdValue
 * @type action
 *
 */
async function setValue(value) {
  await this.clearValue();
  return this.addValue(value);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9lbGVtZW50L3NldFZhbHVlLmpzIl0sIm5hbWVzIjpbInNldFZhbHVlIiwidmFsdWUiLCJjbGVhclZhbHVlIiwiYWRkVmFsdWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCZSxlQUFlQSxRQUFmLENBQXlCQyxLQUF6QixFQUFnQztBQUMzQyxRQUFNLEtBQUtDLFVBQUwsRUFBTjtBQUVBLFNBQU8sS0FBS0MsUUFBTCxDQUFjRixLQUFkLENBQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIFNlbmQgYSBzZXF1ZW5jZSBvZiBrZXkgc3Ryb2tlcyB0byBhbiBlbGVtZW50IChjbGVhcnMgdmFsdWUgYmVmb3JlKS4gSWYgdGhlIGVsZW1lbnRcbiAqIGRvZXNuJ3QgbmVlZCB0byBiZSBjbGVhcmVkIGZpcnN0IHRoZW4gdXNlIGFkZFZhbHVlLiBZb3UgY2FuIGFsc28gdXNlXG4gKiB1bmljb2RlIGNoYXJhY3RlcnMgbGlrZSBMZWZ0IGFycm93IG9yIEJhY2sgc3BhY2UuIFdlYmRyaXZlcklPIHdpbGwgdGFrZSBjYXJlIG9mXG4gKiB0cmFuc2xhdGluZyB0aGVtIGludG8gdW5pY29kZSBjaGFyYWN0ZXJzLiBZb3XigJlsbCBmaW5kIGFsbCBzdXBwb3J0ZWQgY2hhcmFjdGVyc1xuICogW2hlcmVdKGh0dHBzOi8vdzNjLmdpdGh1Yi5pby93ZWJkcml2ZXIvd2ViZHJpdmVyLXNwZWMuaHRtbCNrZXlib2FyZC1hY3Rpb25zKS5cbiAqIFRvIGRvIHRoYXQsIHRoZSB2YWx1ZSBoYXMgdG8gY29ycmVzcG9uZCB0byBhIGtleSBmcm9tIHRoZSB0YWJsZS5cbiAqXG4gKiA8ZXhhbXBsZT5cbiAgICA6c2V0VmFsdWUuanNcbiAgICBpdCgnc2hvdWxkIHNldCB2YWx1ZSBmb3IgYSBjZXJ0YWluIGVsZW1lbnQnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0ID0gJCgnLmlucHV0Jyk7XG4gICAgICAgIGlucHV0LnNldFZhbHVlKCd0ZXN0MTIzJyk7XG5cbiAgICAgICAgY29uc29sZS5sb2coaW5wdXQuZ2V0VmFsdWUoKSk7IC8vIG91dHB1dHM6ICd0ZXN0MTIzJ1xuICAgIH0pO1xuICogPC9leGFtcGxlPlxuICpcbiAqIEBhbGlhcyBlbGVtZW50LnNldFZhbHVlXG4gKiBAcGFyYW0ge1N0cmluZ30gc2VsZWN0b3IgICBJbnB1dCBlbGVtZW50XG4gKiBAcGFyYW0geyp9ICAgICAgdmFsdWVzICAgIFZhbHVlIHRvIGJlIGFkZGVkXG4gKiBAdXNlcyBwcm90b2NvbC9lbGVtZW50cywgcHJvdG9jb2wvZWxlbWVudElkQ2xlYXIsIHByb3RvY29sL2VsZW1lbnRJZFZhbHVlXG4gKiBAdHlwZSBhY3Rpb25cbiAqXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gc2V0VmFsdWUgKHZhbHVlKSB7XG4gICAgYXdhaXQgdGhpcy5jbGVhclZhbHVlKClcblxuICAgIHJldHVybiB0aGlzLmFkZFZhbHVlKHZhbHVlKVxufVxuIl19