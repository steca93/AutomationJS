"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getValue;

require("source-map-support/register");

/**
 *
 * Get the value of a `<textarea>`, `<select>` or text `<input>` found by given selector.
 * If multiple elements are found via the given selector, an array of values is returned instead.
 *
 * <example>
    :index.html
    <input type="text" value="John Doe" id="username">
    :getValue.js
    it('should demonstrate the getValue command', () => {
        const inputUser = $('#username');
        const value = inputUser.getValue();
        console.log(value); // outputs: "John Doe"
    });
 * </example>
 *
 * @alias element.getValue
 * @param  {String} selector  input, textarea, or select element
 * @return {String|String[]}  requested element(s) value
 * @uses protocol/elements, protocol/elementIdProperty
 * @type property
 *
 */
function getValue() {
  if (this.isW3C) {
    return this.getElementProperty(this.elementId, 'value');
  }

  return this.getElementAttribute(this.elementId, 'value');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9lbGVtZW50L2dldFZhbHVlLmpzIl0sIm5hbWVzIjpbImdldFZhbHVlIiwiaXNXM0MiLCJnZXRFbGVtZW50UHJvcGVydHkiLCJlbGVtZW50SWQiLCJnZXRFbGVtZW50QXR0cmlidXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QmUsU0FBU0EsUUFBVCxHQUFxQjtBQUNoQyxNQUFJLEtBQUtDLEtBQVQsRUFBZ0I7QUFDWixXQUFPLEtBQUtDLGtCQUFMLENBQXdCLEtBQUtDLFNBQTdCLEVBQXdDLE9BQXhDLENBQVA7QUFDSDs7QUFFRCxTQUFPLEtBQUtDLG1CQUFMLENBQXlCLEtBQUtELFNBQTlCLEVBQXlDLE9BQXpDLENBQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIEdldCB0aGUgdmFsdWUgb2YgYSBgPHRleHRhcmVhPmAsIGA8c2VsZWN0PmAgb3IgdGV4dCBgPGlucHV0PmAgZm91bmQgYnkgZ2l2ZW4gc2VsZWN0b3IuXG4gKiBJZiBtdWx0aXBsZSBlbGVtZW50cyBhcmUgZm91bmQgdmlhIHRoZSBnaXZlbiBzZWxlY3RvciwgYW4gYXJyYXkgb2YgdmFsdWVzIGlzIHJldHVybmVkIGluc3RlYWQuXG4gKlxuICogPGV4YW1wbGU+XG4gICAgOmluZGV4Lmh0bWxcbiAgICA8aW5wdXQgdHlwZT1cInRleHRcIiB2YWx1ZT1cIkpvaG4gRG9lXCIgaWQ9XCJ1c2VybmFtZVwiPlxuICAgIDpnZXRWYWx1ZS5qc1xuICAgIGl0KCdzaG91bGQgZGVtb25zdHJhdGUgdGhlIGdldFZhbHVlIGNvbW1hbmQnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGlucHV0VXNlciA9ICQoJyN1c2VybmFtZScpO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGlucHV0VXNlci5nZXRWYWx1ZSgpO1xuICAgICAgICBjb25zb2xlLmxvZyh2YWx1ZSk7IC8vIG91dHB1dHM6IFwiSm9obiBEb2VcIlxuICAgIH0pO1xuICogPC9leGFtcGxlPlxuICpcbiAqIEBhbGlhcyBlbGVtZW50LmdldFZhbHVlXG4gKiBAcGFyYW0gIHtTdHJpbmd9IHNlbGVjdG9yICBpbnB1dCwgdGV4dGFyZWEsIG9yIHNlbGVjdCBlbGVtZW50XG4gKiBAcmV0dXJuIHtTdHJpbmd8U3RyaW5nW119ICByZXF1ZXN0ZWQgZWxlbWVudChzKSB2YWx1ZVxuICogQHVzZXMgcHJvdG9jb2wvZWxlbWVudHMsIHByb3RvY29sL2VsZW1lbnRJZFByb3BlcnR5XG4gKiBAdHlwZSBwcm9wZXJ0eVxuICpcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRWYWx1ZSAoKSB7XG4gICAgaWYgKHRoaXMuaXNXM0MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0RWxlbWVudFByb3BlcnR5KHRoaXMuZWxlbWVudElkLCAndmFsdWUnKVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmdldEVsZW1lbnRBdHRyaWJ1dGUodGhpcy5lbGVtZW50SWQsICd2YWx1ZScpXG59XG4iXX0=