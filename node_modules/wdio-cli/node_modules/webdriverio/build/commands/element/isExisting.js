"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isExisting;

require("source-map-support/register");

/**
 *
 * Returns true if element exists in the DOM
 *
 * <example>
    :index.html
    <div id="notDisplayed" style="display: none"></div>
    <div id="notVisible" style="visibility: hidden"></div>
    <div id="notInViewport" style="position:absolute; left: 9999999"></div>
    <div id="zeroOpacity" style="opacity: 0"></div>
    :isExisting.js
    it('should detect if elements are existing', () => {
        let elem = $('#someRandomNonExistingElement')
        let isExisting = elem.isExisting()
        console.log(isExisting); // outputs: false

        elem = $('#notDisplayed')
        isExisting = elem.isExisting()
        console.log(isExisting); // outputs: true

        elem = $('#notVisible')
        isExisting = elem.isExisting()
        console.log(isExisting); // outputs: true

        elem = $('#notInViewport')
        isExisting = elem.isExisting()
        console.log(isExisting); // outputs: true

        elem = $('#zeroOpacity')
        isExisting = elem.isExisting()
        console.log(isExisting); // outputs: true
    });
 * </example>
 *
 * @alias element.isExisting
 * @param   {String}             selector  DOM-element
 * @return {Boolean|Boolean[]}            true if element(s)* [is|are] existing
 * @uses protocol/elements
 * @type state
 *
 */
function isExisting() {
  return this.parent.$$(this.selector).then(res => res.length > 0);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tYW5kcy9lbGVtZW50L2lzRXhpc3RpbmcuanMiXSwibmFtZXMiOlsiaXNFeGlzdGluZyIsInBhcmVudCIsIiQkIiwic2VsZWN0b3IiLCJ0aGVuIiwicmVzIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwQ2UsU0FBU0EsVUFBVCxHQUF1QjtBQUNsQyxTQUFPLEtBQUtDLE1BQUwsQ0FBWUMsRUFBWixDQUFlLEtBQUtDLFFBQXBCLEVBQThCQyxJQUE5QixDQUFvQ0MsR0FBRCxJQUFTQSxHQUFHLENBQUNDLE1BQUosR0FBYSxDQUF6RCxDQUFQO0FBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICpcbiAqIFJldHVybnMgdHJ1ZSBpZiBlbGVtZW50IGV4aXN0cyBpbiB0aGUgRE9NXG4gKlxuICogPGV4YW1wbGU+XG4gICAgOmluZGV4Lmh0bWxcbiAgICA8ZGl2IGlkPVwibm90RGlzcGxheWVkXCIgc3R5bGU9XCJkaXNwbGF5OiBub25lXCI+PC9kaXY+XG4gICAgPGRpdiBpZD1cIm5vdFZpc2libGVcIiBzdHlsZT1cInZpc2liaWxpdHk6IGhpZGRlblwiPjwvZGl2PlxuICAgIDxkaXYgaWQ9XCJub3RJblZpZXdwb3J0XCIgc3R5bGU9XCJwb3NpdGlvbjphYnNvbHV0ZTsgbGVmdDogOTk5OTk5OVwiPjwvZGl2PlxuICAgIDxkaXYgaWQ9XCJ6ZXJvT3BhY2l0eVwiIHN0eWxlPVwib3BhY2l0eTogMFwiPjwvZGl2PlxuICAgIDppc0V4aXN0aW5nLmpzXG4gICAgaXQoJ3Nob3VsZCBkZXRlY3QgaWYgZWxlbWVudHMgYXJlIGV4aXN0aW5nJywgKCkgPT4ge1xuICAgICAgICBsZXQgZWxlbSA9ICQoJyNzb21lUmFuZG9tTm9uRXhpc3RpbmdFbGVtZW50JylcbiAgICAgICAgbGV0IGlzRXhpc3RpbmcgPSBlbGVtLmlzRXhpc3RpbmcoKVxuICAgICAgICBjb25zb2xlLmxvZyhpc0V4aXN0aW5nKTsgLy8gb3V0cHV0czogZmFsc2VcblxuICAgICAgICBlbGVtID0gJCgnI25vdERpc3BsYXllZCcpXG4gICAgICAgIGlzRXhpc3RpbmcgPSBlbGVtLmlzRXhpc3RpbmcoKVxuICAgICAgICBjb25zb2xlLmxvZyhpc0V4aXN0aW5nKTsgLy8gb3V0cHV0czogdHJ1ZVxuXG4gICAgICAgIGVsZW0gPSAkKCcjbm90VmlzaWJsZScpXG4gICAgICAgIGlzRXhpc3RpbmcgPSBlbGVtLmlzRXhpc3RpbmcoKVxuICAgICAgICBjb25zb2xlLmxvZyhpc0V4aXN0aW5nKTsgLy8gb3V0cHV0czogdHJ1ZVxuXG4gICAgICAgIGVsZW0gPSAkKCcjbm90SW5WaWV3cG9ydCcpXG4gICAgICAgIGlzRXhpc3RpbmcgPSBlbGVtLmlzRXhpc3RpbmcoKVxuICAgICAgICBjb25zb2xlLmxvZyhpc0V4aXN0aW5nKTsgLy8gb3V0cHV0czogdHJ1ZVxuXG4gICAgICAgIGVsZW0gPSAkKCcjemVyb09wYWNpdHknKVxuICAgICAgICBpc0V4aXN0aW5nID0gZWxlbS5pc0V4aXN0aW5nKClcbiAgICAgICAgY29uc29sZS5sb2coaXNFeGlzdGluZyk7IC8vIG91dHB1dHM6IHRydWVcbiAgICB9KTtcbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiBAYWxpYXMgZWxlbWVudC5pc0V4aXN0aW5nXG4gKiBAcGFyYW0gICB7U3RyaW5nfSAgICAgICAgICAgICBzZWxlY3RvciAgRE9NLWVsZW1lbnRcbiAqIEByZXR1cm4ge0Jvb2xlYW58Qm9vbGVhbltdfSAgICAgICAgICAgIHRydWUgaWYgZWxlbWVudChzKSogW2lzfGFyZV0gZXhpc3RpbmdcbiAqIEB1c2VzIHByb3RvY29sL2VsZW1lbnRzXG4gKiBAdHlwZSBzdGF0ZVxuICpcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0V4aXN0aW5nICgpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJlbnQuJCQodGhpcy5zZWxlY3RvcikudGhlbigocmVzKSA9PiByZXMubGVuZ3RoID4gMClcbn1cbiJdfQ==